<launch>
    <arg name="robot_name"              default="/"/>  <!-- Change this for namespacing. -->
    <arg name="base_frame"             default="body"/> <!-- Link name of floating base. Do not touch this. -->
    <arg name="joints_map_file"        default="$(find spot_manipulator)/config/joints/joints.yaml"/> <!--Path to list of joint names. Do not touch this. -->
    <arg name="links_map_file"         default="$(find spot_manipulator)/config/links/links.yaml"/> <!-- Path to list of link names. Do not touch this. -->
    <arg name="gait_config_file"       default="$(find spot_manipulator)/config/gait/gait.yaml"/>  <!-- Path to gait parameters. Do not touch this. -->
    <!--arg name="description_file"       default="$(find spot_manipulator)/urdf/spot.urdf"/--> <!-- Path to URDF file Do not touch this. -->
    <arg name="gazebo"                 default="false" /> <!-- Set to true during simulation. This is auto-set to true from gazebo.launch. -->
    <arg name="rviz"                   default="false"/> <!-- Set to true to run rviz in parallel. -->
    <arg name="rviz_ref_frame"         default="odom"/> <!-- Default RVIZ reference frame. -->
    <arg name="has_imu"                default="true" /> <!-- Set to true if you want to visualize robot but there's no IMU. Only useful for microcontrollers. -->
    <arg name="lite"                   default="false" /> <!-- Set to true if you're using CHAMP lite version. Only useful for microcontrollers. -->
    <arg name="close_loop_odom"        default="false" /> <!-- Set to true if you want to calculate odometry using close loop. This is auto-set to true from gazebo.launch. -->
    <arg name="publish_foot_contacts"  default="true" /> <!-- Set to true if you want the controller to publish the foot contact states. This is auto-set to false from gazebo.launch. -->
    <arg name="publish_joint_control"  default="true" /> <!-- Set to true if you want the controller to publish the joint_states topic. This is auto-set to false from gazebo.launch. -->
    <arg name="laser"                  default="sim"/> <!-- Set to the 2D LIDAR you're using. See https://github.com/chvmp/champ/tree/master/champ_bringup/launch/include/laser .-->
    <arg name="joint_controller_topic" default="joint_group_position_controller/command" /> <!-- Change to remap command topic for actuator controller (ROS control).  -->
    <arg name="hardware_connected"     default="false" /> <!-- Flag useful to launch hardware connected launch files. This auto disables publishing joint_states. -->

    <group ns="$(arg robot_name)">
        <param name="tf_prefix" value="$(arg robot_name)"/>
        <param if="$(arg gazebo)" name="use_sim_time" value="true"/>

        <!-- ==================== LOAD PARAMETERS ==================== -->
        <!--param name="robot_description" textfile="$(arg description_file)"/-->
        <param name="robot_description" command="$(find xacro)/xacro '$(find spot_manipulator)/urdf/spot.urdf.xacro'"/>
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
            <param name="use_tf_static"     value="false"/>
            <param name="publish_frequency" value="200"/>
            <param name="ignore_timestamp" value="true"/>
        </node>

        <rosparam command="load" ns="gait"       file="$(arg gait_config_file)" />
        <rosparam command="load" ns="links_map"  file="$(arg links_map_file)" />
        <rosparam command="load" ns="joints_map" file="$(arg joints_map_file)" />


        <!-- ==================== CONTROLLER ==================== -->
        <include file="$(find spot_manipulator)/launch/velocity_smoother.launch" />

        <node unless="$(arg lite)" pkg="champ_base" name="champ_controller" type="quadruped_controller_node" output="screen">
            <param                                    name="gazebo"                 value="$(arg gazebo)" />
            <param if="$(arg hardware_connected)"     name="publish_joint_states"   value="false" />
            <param unless="$(arg hardware_connected)" name="publish_joint_states"   value="true" />
            <param                                    name="publish_foot_contacts"  value="$(arg publish_foot_contacts)" />
            <param                                    name="publish_joint_control"  value="$(arg publish_joint_control)" />
            <param                                    name="joint_controller_topic" value="$(arg joint_controller_topic)" />
        </node>

        <!-- ==================== STATE ESTIMATION ==================== -->
        <node pkg="champ_base" name="state_estimator" type="state_estimation_node" output="screen">
            <param if="$(arg hardware_connected)" name="orientation_from_imu" value="true"/>
            <param if="$(arg gazebo)" name="orientation_from_imu" value="true"/>            
        </node>

        <node pkg="robot_localization" type="ekf_localization_node" name="base_to_footprint_ekf"> 
            <remap from="odometry/filtered" to="odom/local" />
            <param name="base_link_frame" value="$(arg base_frame)" />
            <rosparam command="load" file="$(find spot_manipulator)/config/ekf/base_to_footprint.yaml" />
        </node>

        <node pkg="robot_localization" type="ekf_localization_node" name="footprint_to_odom_ekf"> 
            <remap from="odometry/filtered" to="odom" />
            <rosparam command="load" file="$(find spot_manipulator)/config/ekf/footprint_to_odom.yaml" />
        </node>
        
        <node if="$(arg rviz)" name="rviz" pkg="rviz" type="rviz"
            args="-d $(find spot_manipulator)/rviz/urdf_viewer.rviz -f $(arg rviz_ref_frame)"
            output="screen"/>
    </group>

</launch>